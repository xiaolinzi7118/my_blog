(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{516:function(t,s,a){t.exports=a.p+"assets/img/smallApp-login.1350b1fd.png"},517:function(t,s,a){t.exports=a.p+"assets/img/smallApp-pay.41f45daf.png"},518:function(t,s,a){t.exports=a.p+"assets/img/smallApp-core.d100c884.png"},548:function(t,s,a){"use strict";a.r(s);var v=a(2),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"小程序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小程序"}},[t._v("#")]),t._v(" 小程序")]),t._v(" "),v("h3",{attrs:{id:"对小程序的理解-相比于h5的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对小程序的理解-相比于h5的区别"}},[t._v("#")]),t._v(" 对小程序的理解，相比于H5的区别")]),t._v(" "),v("p",[t._v("优点：")]),t._v(" "),v("ul",[v("li",[t._v("随搜随用，用完即走：使得小程序可以代替许多APP，或是做APP的整体嫁接，或是作为阉割版功能的承载体")]),t._v(" "),v("li",[t._v("流量大，易接受：小程序借助自身平台更加容易引入更多的流量")]),t._v(" "),v("li",[t._v("安全")]),t._v(" "),v("li",[t._v("开发门槛低")]),t._v(" "),v("li",[t._v("降低兼容性限制")])]),t._v(" "),v("p",[t._v("缺点：")]),t._v(" "),v("ul",[v("li",[t._v("用户留存：及相关数据显示，小程序的平均次日留存在13%左右，但是双周留存骤降到仅有1%")]),t._v(" "),v("li",[t._v("体积限制：微信小程序只有2M的大小，这样导致无法开发大型一些的小程序")]),t._v(" "),v("li",[t._v("受控微信：比起APP，尤其是安卓版的高自由度，小程序要面对很多来自微信的限制，从功能接口，甚至到类别内容，都要接受微信的管控")])]),t._v(" "),v("p",[v("strong",[t._v("与H5的区别")])]),t._v(" "),v("ul",[v("li",[t._v("运⾏环境：⼩程序基于浏览器内核重构的内置解析器")]),t._v(" "),v("li",[t._v("系统权限：⼩程序能获得更多的系统权限，如⽹络通信状态、数据缓存能⼒等")]),t._v(" "),v("li",[t._v("渲染机制：⼩程序的逻辑层和渲染层是分开的")])]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"小程序的生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小程序的生命周期"}},[t._v("#")]),t._v(" 小程序的生命周期")]),t._v(" "),v("p",[v("strong",[t._v("应用的生命周期")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("生命周期")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("onLaunch")]),t._v(" "),v("td",[t._v("小程序初始化完成时触发，全局只触发一次")])]),t._v(" "),v("tr",[v("td",[t._v("onShow")]),t._v(" "),v("td",[t._v("小程序启动，或从后台进入前台显示时触发")])]),t._v(" "),v("tr",[v("td",[t._v("onHide")]),t._v(" "),v("td",[t._v("小程序从前台进入后台时触发")])]),t._v(" "),v("tr",[v("td",[t._v("onError")]),t._v(" "),v("td",[t._v("小程序发生脚本错误或 API 调用报错时触发")])]),t._v(" "),v("tr",[v("td",[t._v("onPageNotFound")]),t._v(" "),v("td",[t._v("小程序要打开的页面不存在时触发")])]),t._v(" "),v("tr",[v("td",[t._v("onUnhandledRejection()")]),t._v(" "),v("td",[t._v("小程序有未处理的 Promise 拒绝时触发")])]),t._v(" "),v("tr",[v("td",[t._v("onThemeChange")]),t._v(" "),v("td",[t._v("系统切换主题时触发")])])])]),t._v(" "),v("p",[v("strong",[t._v("页面的生命周期")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("生命周期")]),t._v(" "),v("th",[t._v("说明")]),t._v(" "),v("th",[t._v("作用")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("onLoad")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面加载")]),t._v(" "),v("td",[t._v("发送请求获取数据")])]),t._v(" "),v("tr",[v("td",[t._v("onShow")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面显示")]),t._v(" "),v("td",[t._v("请求数据")])]),t._v(" "),v("tr",[v("td",[t._v("onReady")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面初次渲染完成")]),t._v(" "),v("td",[t._v("获取页面元素（少用）")])]),t._v(" "),v("tr",[v("td",[t._v("onHide")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面隐藏")]),t._v(" "),v("td",[t._v("终止任务，如定时器或者播放音乐")])]),t._v(" "),v("tr",[v("td",[t._v("onUnload")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面卸载")]),t._v(" "),v("td",[t._v("终止任务")])])])]),t._v(" "),v("p",[v("strong",[t._v("组件的生命周期")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("生命周期")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("created")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面加载")])]),t._v(" "),v("tr",[v("td",[t._v("attached")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面显示")])]),t._v(" "),v("tr",[v("td",[t._v("ready")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面初次渲染完成")])]),t._v(" "),v("tr",[v("td",[t._v("moved")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面隐藏")])]),t._v(" "),v("tr",[v("td",[t._v("detached")]),t._v(" "),v("td",[t._v("生命周期回调—监听页面卸载")])]),t._v(" "),v("tr",[v("td",[t._v("error")]),t._v(" "),v("td",[t._v("每当组件方法抛出错误时执行")])])])]),t._v(" "),v("p",[t._v("当存在也应用生命周期和页面周期的时候，相关的执行顺序如下：")]),t._v(" "),v("ul",[v("li",[t._v("打开小程序：(App)onLaunch --\x3e (App)onShow --\x3e (Pages)onLoad --\x3e (Pages)onShow --\x3e (pages)onRead")]),t._v(" "),v("li",[t._v("进入下一个页面：(Pages)onHide --\x3e (Next)onLoad --\x3e (Next)onShow --\x3e (Next)onReady")]),t._v(" "),v("li",[t._v("返回上一个页面：(curr)onUnload --\x3e (pre)onShow")]),t._v(" "),v("li",[t._v("离开小程序：(App)onHide")]),t._v(" "),v("li",[t._v("再次进入：小程序未销毁 --\x3e (App)onShow(执行上面的顺序），小程序被销毁，（App)onLaunch重新开始执行")])]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"小程序路由跳转-页面栈"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小程序路由跳转-页面栈"}},[t._v("#")]),t._v(" 小程序路由跳转，页面栈")]),t._v(" "),v("ul",[v("li",[t._v("navigateTo 保留当前页面，跳转到应用内的某个页面，使用 wx.navigateBack 可以返回到原页")]),t._v(" "),v("li",[t._v("redirectTo 关闭当前页面，跳转到应用内的某个页面")]),t._v(" "),v("li",[t._v("switchTab 跳转到 tabBar 页面，同时关闭其他非 tabBar 页面")]),t._v(" "),v("li",[t._v("navigateBack 返回上一页面")]),t._v(" "),v("li",[t._v("reLaunch 关闭所有页面，打开到应用内的某个页面")])]),t._v(" "),v("p",[t._v("其中关于它们的页面栈的关系如下：")]),t._v(" "),v("ul",[v("li",[t._v("navigateTo 新页面入栈")]),t._v(" "),v("li",[t._v("redirectTo 当前页面出栈，新页面入栈")]),t._v(" "),v("li",[t._v("navigateBack 页面不断出栈，直到目标返回页，新页面入栈")]),t._v(" "),v("li",[t._v("switchTab 页面全部出栈，只留下新的 Tab 页面")]),t._v(" "),v("li",[t._v("reLaunch 页面全部出栈，只留下新的页面")])]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"小程序的登录流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小程序的登录流程"}},[t._v("#")]),t._v(" 小程序的登录流程")]),t._v(" "),v("p",[v("img",{attrs:{src:a(516),alt:"smallApp-login"}})]),t._v(" "),v("ul",[v("li",[t._v("通过 wx.login() 获取到用户的code判断用户是否授权读取用户信息，调用wx.getUserInfo 读取用户数据")]),t._v(" "),v("li",[t._v("由于小程序后台授权域名无法授权微信的域名，所以需要自身后端调用微信服务器获取用户信息")]),t._v(" "),v("li",[t._v("通过 wx.request() 方法请求业务方服务器，后端把 appid , appsecret 和 code 一起发送到微信服务器。 appid 和 appsecret 都是微信提供的，可以在管理员后台找到")]),t._v(" "),v("li",[t._v("微信服务器返回了 openid 及本次登录的会话密钥 session_key")]),t._v(" "),v("li",[t._v("后端从数据库中查找 openid ，如果没有查到记录，说明该用户没有注册，如果有记录，则继续往下走")]),t._v(" "),v("li",[t._v("session_key 是对用户数据进行加密签名的密钥。为了自身应用安全，session_key 不应该在网络上传输")]),t._v(" "),v("li",[t._v("然后生成 session并返回给小程序")]),t._v(" "),v("li",[t._v("小程序把 session 存到 storage 里面")]),t._v(" "),v("li",[t._v("下次请求时，先从 storage 里面读取，然后带给服务端")]),t._v(" "),v("li",[t._v("服务端对比 session 对应的记录，然后校验有效期")])]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"小程序的支付流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小程序的支付流程"}},[t._v("#")]),t._v(" 小程序的支付流程")]),t._v(" "),v("p",[v("img",{attrs:{src:a(517),alt:"smallApp-pay"}})]),t._v(" "),v("p",[t._v("具体的做法：")]),t._v(" "),v("ul",[v("li",[t._v("打开某小程序，点击直接下单，前端将订单数据发送给服务器，")]),t._v(" "),v("li",[t._v("服务器在接收到数据后结合openId（wx.login登录后从微信后台获取到的），生成服务器订单数据，同时经过一定的签名算法，向微信支付发送请求，获取预付单信息(prepay_id)，同时将获取的数据再次进行相应规则的签名，向前端响应必要的信息")]),t._v(" "),v("li",[t._v("前端在获取对应的参数后，调用 "),v("strong",[t._v("wx.requestPayment()")]),t._v(" 发起微信支付，唤醒支付工作台，进行支付")]),t._v(" "),v("li",[t._v("接下来的一些列操作都是由用户来操作，包括了微信支付密码，指纹等验证，确认支付之后执行鉴权调起支付")]),t._v(" "),v("li",[t._v("鉴权调起支付：在微信后台进行鉴权，微信后台直接返回给前端支付的结果，前端收到返回数据后对支付结果进行展示")]),t._v(" "),v("li",[t._v("推送支付结果：微信后台在给前端返回支付的结果后，也会向后台也返回一个支付结果，后台通过这个支付结果来更新订单的状态")])]),t._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[t._v("wx"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestPayment")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 时间戳")]),t._v("\n  timeStamp"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 随机字符串")]),t._v("\n  nonceStr"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 统一下单接口返回的 prepay_id 参数值")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 签名类型")]),t._v("\n  signType"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 签名")]),t._v("\n  paySign"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用成功回调")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 失败回调")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("fail")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接口调用结束回调")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("complete")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br"),v("span",{staticClass:"line-number"},[t._v("12")]),v("br"),v("span",{staticClass:"line-number"},[t._v("13")]),v("br"),v("span",{staticClass:"line-number"},[t._v("14")]),v("br"),v("span",{staticClass:"line-number"},[t._v("15")]),v("br"),v("span",{staticClass:"line-number"},[t._v("16")]),v("br"),v("span",{staticClass:"line-number"},[t._v("17")]),v("br"),v("span",{staticClass:"line-number"},[t._v("18")]),v("br")])]),v("hr"),t._v(" "),v("h3",{attrs:{id:"小程序的实现原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小程序的实现原理"}},[t._v("#")]),t._v(" 小程序的实现原理")]),t._v(" "),v("p",[t._v("在小程序中，选择了 "),v("code",[t._v("Hybrid")]),t._v(" 的渲染方式，将视图层和逻辑层是分开的，双线程同时运行，视图层的界面使用 "),v("code",[t._v("WebView")]),t._v(" 进行渲染，逻辑层运行在 "),v("code",[t._v("JSCore")]),t._v(" 中")]),t._v(" "),v("p",[v("img",{attrs:{src:a(518),alt:"smallApp-core"}})]),t._v(" "),v("ul",[v("li",[t._v("渲染层：界面渲染相关的任务全都在 WebView 线程里执行。一个小程序存在多个界面，所以渲染层存在多个 WebView 线程")]),t._v(" "),v("li",[t._v("逻辑层：采用 JsCore 线程运行 JS 脚本，在这个环境下执行的都是有关小程序业务逻辑的代码")])]),t._v(" "),v("p",[t._v("由于小程序是基于双线程的，也就是任何在视图层和逻辑层之间的数据传递都是线程间的通信，会有一定的延时，因此在小程序中，页面更新成了异步操作")]),t._v(" "),v("p",[v("strong",[t._v("启动机制")])]),t._v(" "),v("ul",[v("li",[t._v("冷启动（重新开始）：用户首次打开或者小程序被微信主动销毁后再次打开的情况，此时小程序需要重新加载启动，即为冷启动")]),t._v(" "),v("li",[t._v("热启动：用户已经打开过小程序，然后在一定时间内再次打开该小程序，此时无需重新启动，只需要将后台态的小程序切换到前台，这个过程就是热启动")])]),t._v(" "),v("p",[t._v("开发者在后台发布新版本之后，无法立刻影响到所有现网用户，但最差情况下，也在发布之后 24 小时之内下发新版本信息到用户")]),t._v(" "),v("p",[t._v("每次冷启动时，都会检查是否有更新版本，如果发现有新版本，将会异步下载新版本的代码包，并同时用客户端本地的包进行启动，即新版本的小程序需要等下一次冷启动才会应用上")])])}),[],!1,null,null,null);s.default=_.exports}}]);